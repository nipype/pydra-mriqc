# name of the converted workflow constructor function
name: init_anat_report_wf
# name of the nipype workflow constructor
nipype_name: init_anat_report_wf
# name of the nipype module the function is found within, e.g. mriqc.workflows.anatomical.base
nipype_module: mriqc.workflows.anatomical.output
# Name of the node that is to be considered the input of the workflow, i.e. its outputs will be the inputs of the workflow
input_nodes:
  inputnode: ""
# Name of the node that is to be considered the output of the workflow, i.e. its inputs will be the outputs of the workflow
output_nodes:
  ds_report_zoomed: zoom
  ds_report_background: bg
  ds_report_segm: segm
  ds_report_bmask: bmask
  ds_report_artmask: artmask
  ds_report_airmask: airmask
  ds_report_headmask: headmask
  ds_report_norm: norm
  ds_report_noisefit: noisefit
# Generic regular expression substitutions to be run over the code before it is processed
find_replace:
  - ["config = NipypeConfig\\(\\)", ""]
  - ["iflogger = logging.getLogger\\(\"nipype.interface\"\\)", ""]
  - ["logging = Logging\\(config\\)", ""]
# name of the workflow variable that is returned
workflow_variable: workflow
# the names of the nested workflows that are defined in other modules and need to be imported
external_nested_workflows:
